# Problem: Minimize Malware Spread - https://leetcode.com/problems/minimize-malware-spread/

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        adjList = defaultdict(list)
        for i in range(len(graph)):
            for j in range(len(graph[0])):
                if graph[i][j]:
                    adjList[i].append(j)

        def dfs(i):     
            for nei in adjList[i]:
                if nei not in visited:
                    visited.add(nei)
                    dfs(nei)

        separate_spread = []
        for i in initial:
            visited = {i}
            dfs(i)
            separate_spread.append(visited)

        connect_count = []
        for i in range(len(separate_spread)):
            others_spread = set()
            for j in range(len(separate_spread)):
                if i != j:
                    others_spread.update(separate_spread[j])
            minimized = len(separate_spread[i] - others_spread)
            connect_count.append((initial[i],minimized))

        connect_count.sort(key = lambda x:(-x[1],x[0]))
        return connect_count[0][0]

        